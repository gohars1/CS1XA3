#!/bin/bash

echo "Hi User, may I ask what your name is?" #Prints this text to the screen

read var1 #Prompts user input

echo "Nice to meet you $var1, choose a number"
echo " 1 - File Type Count "
echo " 2 - TODO log "
echo " 3 - play hangman! " # Simply prints this text to the screen

read var2 #Prompts user input

	if [ "$var2" == "1" ]; then # if the user input is the number 1, the following block of code is executed
		echo -n "Number of HTML Files: "
		ls -R /home/gohars1/CS1XA3 | grep -c ".html"
		echo -n "Number of CSS Files: "
		ls -R /home/gohars1/CS1XA3 | grep -c ".css"
		echo -n "Number of Javascript Files: "
		ls -R /home/gohars1/CS1XA3 | grep -c ".jss"
		echo -n "Number of Haskell Files: "
		ls -R /home/gohars1/CS1XA3 | grep -c ".hs"
		echo -n "Number of Python Files: "
		ls -R /home/gohars1/CS1XA3 | grep -c ".py"
		echo -n "Number of Bash Script Files: "
		ls -R /home/gohars1/CS1XA3 | grep -c ".sh" #This body of code simply echos "Number of _ files" for each file type, and then lists all the files in every
							   # directory within the repo and then searches for files ending with a certain file type and uses the -c flag
							   # to count the number of files found 

	elif [ "$var2" == "2" ]; then #if the user input is 2 the following line of code is executed

		grep -Rn '#TODO' ~/CS1XA3 > todo.log #The entire repo is searched for lines within files that contain '#todo' and the output is redirected to todo.log

	elif [ "$var2" == "3" ]; then
		words=`shuf -n 1 words.txt` #This variable words is generated by using the shuf command to randomly select a word from a file words.txt to use in hangman
		python Hangman.py "$words" #Here the python file hangman is executed, the python file takes the parameter words.
	else
		echo "Please execute again"
	fi

